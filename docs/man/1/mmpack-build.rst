============
mmpack-build
============

---------------------
build mmpack packages
---------------------

:Author: Gabriel Ganne <gabriel.ganne@mindmaze.ch>,
         Nicolas Bourdaud <nicolas.bourdaud@mindmaze.ch>
:Date: 2018-10-25
:Manual section: 1

SYNOPSIS
========

**mmpack-build** [*options*] [*command*] [*command options*]

**mmpack-build** --version

**mmpack-build** -h|--help

DESCRIPTION
===========
**mmpack-build** is used to build both binary and source software packages.

A package consists of an archive of files and meta-data used to install and erase
the archive files. Packages come in two varieties: binary packages, used to
encapsulate software to be installed, and source packages, containing the source
code and recipe necessary to produce binary packages.

COMMANDS
========
*command* can be one the values:

  pkg-create
    build the source and the binary packages of a project

  builddep
    install build dependency of a progject in the specified prefix

  clean
    remove temporary and packages generated by **mmpack-build**

  list-commands
    list the accepted subcommands

If no command is explicit, default to **pkg-create**.

OPTIONS
=======

--outdir=path, -o path
  places generated source and binary packages into *path*. If not set, default
  location will be derived from environment variable **XDG_DATA_HOME**.

--builddir=path
  Use *path* to hold temporary files during package generation. If not set,
  default location will be derived from environment variable **XDG_CACHE_HOME**.

--cachedir=path
  Use *path* to hold cached files during package generation. If not set, default
  location will be derived from environment variable **XDG_CACHE_HOME**.

--version
  Display **mmpack-build** version

--help, -h
  Show help and exit

ENVIRONMENT
===========

MMPACK_PREFIX
  If set, **mmpack-build** will parse the given prefix tree when looking for
  package dependencies. If unset, **mmpack-build** will only use the system
  tree.

EXAMPLE
=======
.. code-block:: sh

  # create mmpack package from local sources during development on a branch named *feature*
  mmpack-build pkg-create --git-url=/path/to/sources --tag=feature
 
  # same but also skipping the tests
  mmpack-build pkg-create --git-url=/path/to/sources --tag=feature --skip-build-tests
 
  # create arbitrary project on tag v1.2.3 from git server
  mmpack-build pkg-create --git-url=ssh://git@intranet.mindmaze.ch:7999/project.git --tag=v1.2.3
 
  # create packages from source tarball
  mmpack-build pkg-create --src=project_1.2.3_src.tar.gz

SEE ALSO
========
**mmpack**\(1),
**mmpack-build-pkg-create**\(1),
**mmpack-build-clean**\(1),
**mmpack-build-builddep**\(1),
**mmpack-build-guess**\(1),

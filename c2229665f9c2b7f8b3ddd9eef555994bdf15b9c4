{
  "comments": [
    {
      "key": {
        "uuid": "2410e94b_5e451110",
        "filename": "src/mmpack-build/binary_package.py",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1017136
      },
      "writtenOn": "2020-03-04T20:28:58Z",
      "side": 1,
      "message": "There was a simple primitive way to generate the binpkgs:\n- create\n- gen provides\n- gen dependencies\n\nWhat you\u0027re doing here is breaking that workflow, and I fail to see what good side this brings",
      "revId": "c2229665f9c2b7f8b3ddd9eef555994bdf15b9c4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cf21dd3_c3b0cc97",
        "filename": "src/mmpack-build/binary_package.py",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1017133
      },
      "writtenOn": "2020-03-05T17:32:39Z",
      "side": 1,
      "message": "I don\u0027t break the workflow. This is still exactly the same... The only difference is that I create the actual BinaryPackage altogether at the very end of ventilation step. Before they are populated through a dict of PackageInfo classes which allows us to pass them later to the dispatch hooks.",
      "parentUuid": "2410e94b_5e451110",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c2229665f9c2b7f8b3ddd9eef555994bdf15b9c4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4237153_69bff49f",
        "filename": "src/mmpack-build/binary_package.py",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1017136
      },
      "writtenOn": "2020-03-06T07:15:39Z",
      "side": 1,
      "message": "No it\u0027s not: at the end of the creation (this function), you have a binary package with files and dependencies, but no provides.",
      "parentUuid": "6cf21dd3_c3b0cc97",
      "revId": "c2229665f9c2b7f8b3ddd9eef555994bdf15b9c4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}
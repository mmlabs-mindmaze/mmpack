{
  "comments": [
    {
      "key": {
        "uuid": "d79936c9_3e4b75ae",
        "filename": "docs/specs/package-structure.md",
        "patchSetId": 10
      },
      "lineNbr": 43,
      "author": {
        "id": 1017133
      },
      "writtenOn": "2020-01-21T07:33:55Z",
      "side": 1,
      "message": "Why here, since they are already provided in the known folder in the package",
      "range": {
        "startLine": 43,
        "startChar": 1,
        "endLine": 43,
        "endChar": 49
      },
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59fdbf8d_e213bec6",
        "filename": "docs/specs/package-structure.md",
        "patchSetId": 10
      },
      "lineNbr": 43,
      "author": {
        "id": 1017136
      },
      "writtenOn": "2020-01-21T09:40:57Z",
      "side": 1,
      "message": "Removed.\nAlso removed from the BinaryPackage class\n\nMy initial intent was to be able to have a copy of the string when the license was known so that \"mmpack show\" could display the license names.\n\nI\u0027ll deal with that later when I have a good idea",
      "parentUuid": "d79936c9_3e4b75ae",
      "range": {
        "startLine": 43,
        "startChar": 1,
        "endLine": 43,
        "endChar": 49
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbcaaf3d_c4f4e6d0",
        "filename": "src/mmpack-build/mmpack_guess.py",
        "patchSetId": 10
      },
      "lineNbr": 135,
      "author": {
        "id": 1017476
      },
      "writtenOn": "2020-01-20T10:28:51Z",
      "side": 1,
      "message": "What if you have been unlucy and the first file is something without copyright?\nTo avoid corner cases I would remove the \u0027break\u0027",
      "range": {
        "startLine": 135,
        "startChar": 9,
        "endLine": 135,
        "endChar": 52
      },
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6249f744_69af72bd",
        "filename": "src/mmpack-build/mmpack_guess.py",
        "patchSetId": 10
      },
      "lineNbr": 135,
      "author": {
        "id": 1017136
      },
      "writtenOn": "2020-01-20T10:36:34Z",
      "side": 1,
      "message": "Wouldn\u0027t that risk the command to take much, much more time on big projects ?\nI propose to add a maximum attempt number instead.\n\nIf you\u0027re unlucky, say 10 times, there\u0027s not nuch more change that this will return something correct after having parsed the whole tree.\n\nWhat do you think ?",
      "parentUuid": "cbcaaf3d_c4f4e6d0",
      "range": {
        "startLine": 135,
        "startChar": 9,
        "endLine": 135,
        "endChar": 52
      },
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fb47670_266b03e7",
        "filename": "src/mmpack-build/mmpack_guess.py",
        "patchSetId": 10
      },
      "lineNbr": 141,
      "author": {
        "id": 1017443
      },
      "writtenOn": "2020-01-20T17:49:52Z",
      "side": 1,
      "message": "Are you sure that you want to return a list and not only a string. Because latter in the function -default_licenses you only test a string.\nNormally if you call this function it is only possible to have one license file.",
      "range": {
        "startLine": 141,
        "startChar": 24,
        "endLine": 141,
        "endChar": 33
      },
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c4702ca_0b7b23e6",
        "filename": "src/mmpack-build/mmpack_guess.py",
        "patchSetId": 10
      },
      "lineNbr": 141,
      "author": {
        "id": 1017136
      },
      "writtenOn": "2020-01-21T09:40:57Z",
      "side": 1,
      "message": "The licenses key correspond to a list.\nThis is for simplicity because we can have several licenses for the same project and I did not want to have multiple possible types for the same field.",
      "parentUuid": "1fb47670_266b03e7",
      "range": {
        "startLine": 141,
        "startChar": 24,
        "endLine": 141,
        "endChar": 33
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2adfffaf_c6b90a7d",
        "filename": "src/mmpack-build/mmpack_guess.py",
        "patchSetId": 10
      },
      "lineNbr": 151,
      "author": {
        "id": 1017443
      },
      "writtenOn": "2020-01-20T17:49:52Z",
      "side": 1,
      "message": "don\u0027t you have to return here also list(UNKNOWN)?\nPerhaps return NULL instead of list(UNKNOWN).",
      "range": {
        "startLine": 151,
        "startChar": 15,
        "endLine": 151,
        "endChar": 22
      },
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50710c51_929233ae",
        "filename": "src/mmpack-build/mmpack_guess.py",
        "patchSetId": 10
      },
      "lineNbr": 151,
      "author": {
        "id": 1017136
      },
      "writtenOn": "2020-01-21T09:40:57Z",
      "side": 1,
      "message": "changed to use list(UNKNOWN)",
      "parentUuid": "2adfffaf_c6b90a7d",
      "range": {
        "startLine": 151,
        "startChar": 15,
        "endLine": 151,
        "endChar": 22
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55a82f1f_180ec07e",
        "filename": "src/mmpack-build/src_package.py",
        "patchSetId": 10
      },
      "lineNbr": 475,
      "author": {
        "id": 1017133
      },
      "writtenOn": "2020-01-20T18:05:34Z",
      "side": 1,
      "message": "Please state the type",
      "range": {
        "startLine": 475,
        "startChar": 32,
        "endLine": 475,
        "endChar": 38
      },
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a073f5ce_f87297f3",
        "filename": "src/mmpack-build/src_package.py",
        "patchSetId": 10
      },
      "lineNbr": 475,
      "author": {
        "id": 1017136
      },
      "writtenOn": "2020-01-21T09:40:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55a82f1f_180ec07e",
      "range": {
        "startLine": 475,
        "startChar": 32,
        "endLine": 475,
        "endChar": 38
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4af33ac9_df054389",
        "filename": "src/mmpack-build/src_package.py",
        "patchSetId": 10
      },
      "lineNbr": 509,
      "author": {
        "id": 1017133
      },
      "writtenOn": "2020-01-20T18:05:34Z",
      "side": 1,
      "message": "I am really for this being implemented in a hook... Not only it would avoid to clutter Srcpackage, but also, it would allow more flexibility than doing all the guess in spec loading: If licenses are installed by the project compilation/installation, you will not see them.",
      "range": {
        "startLine": 480,
        "startChar": 8,
        "endLine": 509,
        "endChar": 48
      },
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e7c2f54_b8f03d78",
        "filename": "src/mmpack-build/src_package.py",
        "patchSetId": 10
      },
      "lineNbr": 568,
      "author": {
        "id": 1017133
      },
      "writtenOn": "2020-01-20T18:05:34Z",
      "side": 1,
      "message": "If you rename hook methods update_provides()/store_provides() by gather_metadata()/store_metadata(), you could implement license guessing and storing in a hook.\n\nAlso, it would allows not change the local_install content after post_install() hook",
      "range": {
        "startLine": 567,
        "startChar": 8,
        "endLine": 568,
        "endChar": 42
      },
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c138832_7b1566cf",
        "filename": "src/mmpack-build/src_package.py",
        "patchSetId": 10
      },
      "lineNbr": 568,
      "author": {
        "id": 1017136
      },
      "writtenOn": "2020-01-21T09:40:57Z",
      "side": 1,
      "message": "I do not think that using the update_provides() hook (renamed or not) is a good idea.\nIt was not designed for that purpose, and its integration makes sense as it is today.\nIf restructuring to use hooks instead, I would prefer to introduce new ones.\n\nBelow is the docstring of the BinaryPackage.gen_provides() function with the update_provides() hook.\n\"\"\"\nGo through the install files, look for what this package provides\n\neg. scan elf libraries for symbols\n    python files for top-level classes and functions\n    ...\n\nThis fills the class provides field dictionary\n It does not return any value.\n\nRaises:\n    ValueError: if a specified version is invalid or if a symbol in\n                the spec file is not found provided by the package\n\"\"\"\n\n\n@Luca\n@Marjorie\nWhat do you think ?",
      "parentUuid": "4e7c2f54_b8f03d78",
      "range": {
        "startLine": 567,
        "startChar": 8,
        "endLine": 568,
        "endChar": 42
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "b42f81bd54d4713e99c32c818249b0d3f0970ec4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}